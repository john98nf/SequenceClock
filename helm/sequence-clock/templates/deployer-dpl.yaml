# Copyright Â© 2021 Giannis Fakinos

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployer
  labels:
    app: {{ .Release.Name }}-deployer
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-deployer
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-deployer
    spec:
      tolerations:
        - key: "node-role.kubernetes.io/master"
          effect: "NoSchedule"
          operator: "Exists"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "node-role.kubernetes.io/master"
                  operator: "Exists"
      containers:
        - name: {{ .Release.Name }}-deployer
          image: "{{ .Values.deployer.image.repository }}:{{ .Values.deployer.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.deployer.image.pullPolicy }}
          volumeMounts:
          - name: ctrl-tpl
            mountPath: "/tmp"
          ports:
            - name: http
              containerPort: {{ .Values.deployer.service.port }}
              protocol: TCP
          env:
          - name: API_HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-wsk-info-configmap
                key: apihost
          - name: NAMESPACE
            valueFrom:
              configMapKeyRef:
                name: {{ .Release.Name }}-wsk-info-configmap
                key: namespace
          - name: OPENWHISK_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-openwhisk-secret
                key: authToken
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          livenessProbe:
            httpGet:
              path: /api/check
              port: http
          readinessProbe:
            httpGet:
              path: /api/check
              port: http
      volumes:
        - name: ctrl-tpl
          persistentVolumeClaim:
            claimName: ctrl-tpl-claim
